% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solda_func.R
\name{solda.fit}
\alias{solda.fit}
\title{Sparse Overlapped Linear Discriminant Analysis (SOLDA)}
\usage{
solda.fit(
  y_data,
  x_data.train,
  x_data.test,
  lambda1 = "default",
  lambda2 = 0.25,
  weights = "default",
  num_folds = 10,
  tolerance = 1e-07,
  max_iter = 1e+05,
  num_threads = 2
)
}
\arguments{
\item{y_data}{the response variable. \code{y_data} must be a factor.}

\item{x_data.train}{a numeric (train) data matrix with observations as rows and variables as columns.}

\item{x_data.test}{a numeric (test) data matrix with observations as rows and variables as columns.}

\item{lambda1}{tuning parameter for the L_1 penalty. If a single positive value is supplied, then it is considered as the optimal choice. If a sequence of positive values is supplied, then cross-validation is used to determine the optimal choice. If the "default" value is supplied, then the optimal choice is determined based on data supplied.}

\item{lambda2}{tuning parameter for the L_2 penalty. To add later (default behavior for now)}

\item{weights}{adaptive weights numeric weights. To add later (default behavior for now)}

\item{num_folds}{number of folds to run cross-validation. Default is 10.}

\item{tolerance}{Default is 0.0000001.}

\item{max_iter}{Default is 100000.}

\item{num_threads}{number of cores to use for parallel computations. Default is 2.}
}
\description{
A multi-class classifier using the Linear Discriminant Analysis (LDA) framework.
}
\examples{
\dontrun{
############### solda.fit function ###############
library(mvtnorm)
set.seed(1)
n1 <- 20
n2 <- 20
n3 <- 20
n <- n1 + n2 + n3
p <- 800
sigma <- diag(p)
mean1 <- c(rep(1,10), rep(0,p-10))
mean2 <- c(rep(0,10), rep(1,10), rep(0,p-20))
mean3 <- c(rep(0,20), rep(1,10), rep(0,p-30))
x_data.train <- rbind(rmvnorm(n1, mean1, sigma), rmvnorm(n2, mean2, sigma), rmvnorm(n3, mean3, sigma))
y_data <- as.factor(c(rep("1",n1), rep("2",n2), rep("3",n3)))
solda.output <- solda.fit(y_data = y_data, x_data.train = x_data.train, x_data.test = x_data.train)
solda.y <- solda.output$y_solda
}
}
